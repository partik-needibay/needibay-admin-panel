// ** MUI Imports
import Box from '@mui/material/Box'
import Card from '@mui/material/Card'
import CardContent from '@mui/material/CardContent'
import Switch from '@mui/material/Switch'
import TextField from '@mui/material/TextField'
import Grid from '@mui/material/Grid'
import TreeView from '@mui/lab/TreeView'
import { styled, useTheme } from '@mui/material/styles'
import Typography from '@mui/material/Typography'
import TreeItem from '@mui/lab/TreeItem'
import Select from '@mui/material/Select'
import MenuItem from '@mui/material/MenuItem'
import Icon from 'src/@core/components/icon'
import { Button, CardHeader, List, ListItem, ListItemIcon, ListItemText } from '@mui/material'
import { connect, useDispatch, useSelector } from 'react-redux'
import { fetchData } from 'src/store/apps/service/index'
import { fetchCategoryData } from 'src/store/apps/service/category'

import { useEffect, useState } from 'react'

// Styled TreeItem component
const StyledTreeItemRoot = styled(TreeItem)(({ theme }) => ({
  '&:hover > .MuiTreeItem-content:not(.Mui-selected)': {
    backgroundColor: theme.palette.action.hover
  },
  '& .MuiTreeItem-content': {
    paddingRight: theme.spacing(3),
    borderTopRightRadius: theme.spacing(4),
    borderBottomRightRadius: theme.spacing(4),
    fontWeight: theme.typography.fontWeightMedium
  },
  '& .MuiTreeItem-label': {
    fontWeight: 'inherit',
    paddingRight: theme.spacing(3)
  },
  '& .MuiTreeItem-group': {
    marginLeft: 0,
    '& .MuiTreeItem-content': {
      paddingLeft: theme.spacing(4),
      fontWeight: theme.typography.fontWeightRegular
    }
  }
}))

const StyledTreeItem = props => {
  // ** Props
  const { labelText, labelIcon, labelIconColor, labelInfo, ...other } = props
  return (
    <StyledTreeItemRoot
      {...other}
      label={
        <Box sx={{ py: 1, display: 'flex', justifyContent: 'flex-start', alignItems: 'center', '& svg': { mr: 3 } }}>
          <Icon icon={labelIcon} color={labelIconColor} style={{ fontSize: 16 }} />
          <Typography variant='body2' sx={{ flexGrow: 1, fontWeight: 'inherit' }}>
            {labelText}
          </Typography>
          {labelInfo ? (
            <Typography variant='caption' color='inherit'>
              {labelInfo}
            </Typography>
          ) : null}
        </Box>
      }
    />
  )
}

const ServiceManageComponent = ({ direction }) => {
  const theme = useTheme()
  const ExpandIcon = <Icon icon={direction === 'rtl' ? 'mdi:chevron-left' : 'mdi:chevron-right'} />
  const dispatch = useDispatch()
  //const dispatchCategory = useDispatch()
  const [service, setService] = useState({
    id: Number(''),
    categoryId: Number(''),
    serviceName: '',
    serviceDescription: '',
    perHrCost: Number(''),
    hrs: Number(''),
    rentalCost: Number(''),
    tableReq: Number(''),
    powerReq: Number(''),
    speakerMicReq: Number(''),
    participantCount: Number(''),
    comment: '',
    isActive: null,
    categoryName: ''
  })

  useEffect(() => {
    dispatch(fetchData())
    dispatch(fetchCategoryData())
  }, [])

  const store = useSelector(state => {
    return { service: state.service.data, category: state.serviceCategory.data }
  })

  console.log(store)

  //const categoryStore = useSelector(categoryState => categoryState.serviceCategory.data)

  const serviceSelect = item => {
    console.log(item)
    setService({
      id: item.id,
      categoryId: item.categoryId,
      serviceName: item.serviceName,
      serviceDescription: item.serviceDescription,
      perHrCost: item.perHrCost,
      hrs: item.hrs,
      rentalCost: item.rentalCost,
      tableReq: item.tableReq,
      powerReq: item.powerReq,
      speakerMicReq: item.speakerMicReq,
      participantCount: item.participantCount,
      comment: item.comment,
      isActive: item.isActive,
      categoryName: item.categoryName
    })
  }

  const resetSelect = () => {
    setService({
      id: Number(''),
      categoryId: Number(''),
      serviceName: '',
      serviceDescription: '',
      perHrCost: Number(''),
      hrs: Number(''),
      rentalCost: Number(''),
      tableReq: Number(''),
      powerReq: Number(''),
      speakerMicReq: Number(''),
      participantCount: Number(''),
      comment: '',
      isActive: null,
      categoryName: ''
    })
  }

  return (
    <div style={{ height: '100%' }}>
      <Grid container spacing={6}>
        <Grid item xs={12} md={3} py={2}>
          <Card>
            <CardContent>
              <Box mb={6}>
                <Button size='small' fullWidth variant='outlined' onClick={resetSelect}>
                  Add New Service
                </Button>
              </Box>

              <TreeView
                sx={{ minHeight: 240 }}
                defaultExpandIcon={ExpandIcon}
                defaultCollapseIcon={<Icon icon='mdi:chevron-down' />}
              >
                {store &&
                  store.service.data &&
                  store.service.data.map((item, index) => {
                    return (
                      <StyledTreeItem
                        nodeId={item.id}
                        labelText={item.serviceName}
                        labelIconColor={item.isActive ? theme.palette.success.main : theme.palette.error.main}
                        labelIcon='ic:twotone-circle'
                        onClick={() => serviceSelect(item)}
                      />
                    )
                  })}
              </TreeView>
            </CardContent>
          </Card>
        </Grid>
        <Grid item xs={12} md={8}>
          <Card>
            <CardContent>
              <Box width={'100%'} display={'flex'} justifyContent={'flex-end'}>
                {service.id ? (
                  <Button size='small' variant='outlined' color='primary'>
                    Update
                  </Button>
                ) : (
                  <Button size='small' variant='outlined' color='primary'>
                    Save
                  </Button>
                )}
              </Box>

              <List>
                <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Enable Category</ListItemIcon>
                  <ListItemText>
                    <Switch checked={service.isActive ? true : false} />
                  </ListItemText>
                </ListItem>
                <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Parent Category</ListItemIcon>
                  <ListItemText>
                    <Select
                      placeholder='Parent Catrgory'
                      id='demo-simple-select-outlined'
                      labelId='demo-simple-select-outlined-label'
                      size='small'
                      fullWidth
                      value={Number(service.categoryId)}
                    >
                      {store &&
                        store.category.data &&
                        store.category.data.map(category => {
                          return (
                            <MenuItem value={category.id} selected={category.id == Number(service.categoryId) && true}>
                              {category.categoryName}
                            </MenuItem>
                          )
                        })}
                    </Select>
                  </ListItemText>
                </ListItem>
                <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Category Name</ListItemIcon>
                  <ListItemText>
                    <TextField size='small' placeholder='Leonard Carter' fullWidth value={service.serviceName} />
                  </ListItemText>
                </ListItem>
                {/*                 <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Category Slug</ListItemIcon>
                  <ListItemText>
                    <TextField size='small' label='e.g. food-items' placeholder='Leonard Carter' fullWidth />
                  </ListItemText>
                </ListItem> */}
                {/* <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Add Image</ListItemIcon>
                  <ListItemText>
                    <Upload />
                  </ListItemText>
                </ListItem> */}
                <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Description</ListItemIcon>
                  <ListItemText>
                    <TextField
                      rows={4}
                      multiline
                      fullWidth
                      placeholder='Category Description for Store View'
                      value={service.serviceDescription}
                    />
                  </ListItemText>
                </ListItem>
                <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Per Hour Cost</ListItemIcon>
                  <ListItemText>
                    <ListItemText>
                      <TextField size='small' placeholder='Leonard Carter' fullWidth value={service.perHrCost} />
                    </ListItemText>
                  </ListItemText>
                </ListItem>
                <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Rental Cost</ListItemIcon>
                  <ListItemText>
                    <ListItemText>
                      <TextField size='small' placeholder='Leonard Carter' fullWidth value={service.rentalCost} />
                    </ListItemText>
                  </ListItemText>
                </ListItem>
                <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Table Required</ListItemIcon>
                  <ListItemText>
                    <ListItemText>
                      <TextField size='small' placeholder='Leonard Carter' fullWidth value={service.tableReq} />
                    </ListItemText>
                  </ListItemText>
                </ListItem>
                <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Power Required</ListItemIcon>
                  <ListItemText>
                    <ListItemText>
                      <TextField size='small' placeholder='Leonard Carter' fullWidth value={service.powerReq} />
                    </ListItemText>
                  </ListItemText>
                </ListItem>
                <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Speaker/Mic Required</ListItemIcon>
                  <ListItemText>
                    <ListItemText>
                      <TextField size='small' placeholder='Leonard Carter' fullWidth value={service.speakerMicReq} />
                    </ListItemText>
                  </ListItemText>
                </ListItem>
                <ListItem>
                  <ListItemIcon sx={{ width: 175 }}>Participant Count</ListItemIcon>
                  <ListItemText>
                    <ListItemText>
                      <TextField size='small' placeholder='Leonard Carter' fullWidth value={service.participantCount} />
                    </ListItemText>
                  </ListItemText>
                </ListItem>
              </List>
            </CardContent>
          </Card>
        </Grid>
      </Grid>
    </div>
  )
}

export default ServiceManageComponent
